declare_args() {
    lib_pthread = ""
    boost_include = ""
    lib_boost_regex = ""
    oracle_version = ""
    third_party_source = ""
}

include_dirs = [
    "inc",
    "inc/staticA",
]

defines = [
    "DEFINE_FOR_ALL"
]

print("is_linux            : $is_linux")
print("target_os           : $target_os")
print("lib_pthread         : $lib_pthread")
print("boost_include       : $boost_include")
print("lib_boost_regex     : $lib_boost_regex")
print("oracle_version      : $oracle_version")
print("third_party_source  : $third_party_source")

executable("main") {
    sources = [
        "src/main.cpp",
    ]

    deps = [
        ":foo",
        ":bar",
        ":staticA",
        ":usePthread",
        ":useMultipleLibs",
    ]
}

shared_library("foo") {
    sources = [
        "src/foo.cpp",
    ]

    defines += [ "DEFINE_FOR_FOO" ]
}

shared_library("bar") {
    sources = [
        "src/bar.cpp",
    ]

    deps = [
        ":foo",
    ]
}

shared_library("usePthread") {
    sources = [
        "src/usePthread.cpp",
    ]

    # ldflags = [
    #     "-pthread",
    # ]
    libs = [
        lib_pthread,
    ]
}

shared_library("useMultipleLibs") {
    sources = [
        "src/useMultipleLibs.cpp",
    ]

    include_dirs += [
        boost_include,
    ]

    libs = [
        lib_pthread,
        lib_boost_regex,
    ]

    # Testing +=. Both syntax work.

    # libraries_used = [
    #     lib_pthread,
    #     lib_boost_regex,
    # ]
    # libs = []
    # libs += libraries_used

    # libs = [
    #     lib_pthread,
    # ]
    # libs += [
    #     lib_boost_regex,
    # ]
}

static_library("staticA") {
    sources = [
        "src/staticA/staticA.cpp",
        "src/staticA/staticAOne.cpp",
        "src/staticA/staticATwo.cpp",
    ]

    defines += [ "DEFINE_FOR_STATIC_A" ]
}
